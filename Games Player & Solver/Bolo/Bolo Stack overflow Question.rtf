{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green116\blue0;\red100\green56\blue32;\red196\green26\blue22;
\red170\green13\blue145;\red92\green38\blue153;\red28\green0\blue207;\red46\green13\blue110;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab593
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \CocoaLigature0 //\cf0 \
\cf2 //  main.cpp\cf0 \
\cf2 //  bolo algo test\cf0 \
\cf2 //\cf0 \
\cf2 //  Created by Dany on 29. 01. 2017.\cf0 \
\cf2 //  Copyright \'a9 2017 Dany. All rights reserved.\cf0 \
\cf2 //\cf0 \
\
\cf2 //\cf0 \
\cf2 //  main.cpp\cf0 \
\cf2 //  Bolo algo\cf0 \
\cf2 //\cf0 \
\cf2 //  Created by Dany on 29. 01. 2017.\cf0 \
\cf2 //  Copyright \'a9 2017 Dany. All rights reserved.\cf0 \
\cf2 //\cf0 \
\
\cf3 #include \cf4 <iostream>\cf3 \
#include \cf4 <vector>\cf3 \
\cf5 using\cf0  \cf5 namespace\cf0  \cf6 std\cf0 ;\
\
\cf5 int\cf0  main()\{\
    \cf6 vector\cf0 <\cf5 int\cf0 > des;\
    \
    \cf6 vector\cf0 <\cf5 int\cf0 > ptopt;\
    \
    \cf6 vector\cf0 <\cf5 int\cf0 > desopt;\
    \
    \cf6 vector\cf0 <\cf6 string\cf0 > optch;\
    \
    \cf6 vector\cf0 <\cf5 int\cf0 > sptopt;\
    \
    \cf6 vector\cf0 <\cf5 int\cf0 > sdesopt;\
    \
    \cf6 vector\cf0 <\cf6 string\cf0 > soptch;\
    \cf5 int\cf0   n1(\cf7 0\cf0 ), n2(\cf7 0\cf0 ), n3(\cf7 0\cf0 ), n4(\cf7 0\cf0 ), n5(\cf7 0\cf0 ), n6(\cf7 0\cf0 ), ptsopt(\cf7 0\cf0 );\
    \cf5 int\cf0  cbp(\cf7 0\cf0 ), cbg(\cf7 0\cf0 ), cbg1(\cf7 0\cf0 ), cbg2(\cf7 0\cf0 ), cbg3(\cf7 0\cf0 ), cbg4(\cf7 0\cf0 ), cbg5(\cf7 0\cf0 ), cbg6(\cf7 0\cf0 ), cbg0(\cf7 0\cf0 ), spttot(\cf7 0\cf0 ), spt1(\cf7 0\cf0 ), spt2(\cf7 0\cf0 ), spt3(\cf7 0\cf0 ), spt4(\cf7 0\cf0 ), spt5(\cf7 0\cf0 ), spt6(\cf7 0\cf0 ), spt0(\cf7 0\cf0 );\
    \cf5 int\cf0  w1, w2, w3, w4, w5, w6, w7, w8; \cf2 // w1, w2, w3, w4 pour desopt  w5, w6, w7, w8 pour ptopt\cf0 \
    \
    \cf6 string\cf0  w9, w10, w11, w12;\
    \
    \cf5 for\cf0 (\cf5 int\cf0  i1=\cf7 1\cf0 ; i1<\cf7 7\cf0 ; i1++)\{\
        \cf5 for\cf0 (\cf5 int\cf0  i2=\cf7 1\cf0 ; i2<\cf7 7\cf0 ; i2++)\{\
            \cf5 for\cf0 (\cf5 int\cf0  i3=\cf7 1\cf0 ; i3<\cf7 7\cf0 ; i3++)\{\
                \cf5 for\cf0 (\cf5 int\cf0  i4=\cf7 1\cf0 ; i4<\cf7 7\cf0 ; i4++)\{\
                    \cf5 for\cf0 (\cf5 int\cf0  i5=\cf7 1\cf0 ; i5<\cf7 7\cf0 ; i5++)\{\
                        \cf5 for\cf0 (\cf5 int\cf0  i6=\cf7 1\cf0 ; i6<\cf7 7\cf0 ; i6++)\{\
                            \cf5 for\cf0 (\cf5 int\cf0  i7=\cf7 1\cf0 ; i7<\cf7 7\cf0 ; i7++)\{\
                                des.\cf8 push_back\cf0 (i1);\
                                des.\cf8 push_back\cf0 (i2);\
                                des.\cf8 push_back\cf0 (i3);\
                                des.\cf8 push_back\cf0 (i4);\
                                des.\cf8 push_back\cf0 (i5);\
                                des.\cf8 push_back\cf0 (i6);\
                                des.\cf8 push_back\cf0 (i7);\
                                \
                                \cf5 for\cf0  (\cf5 int\cf0  i=\cf7 0\cf0 ; i<des.\cf8 size\cf0 (); i++)\{\
                                    \
                                    \
                                    \cf5 switch\cf0  (des[\cf8 i\cf0 ])\{\
                                            \
                                        \cf5 case\cf0  \cf7 1\cf0 : n1++;\
                                            \
                                            \cf5 break\cf0 ;\
                                            \
                                        \cf5 case\cf0  \cf7 2\cf0 : n2++;\
                                            \
                                            \cf5 break\cf0 ;\
                                            \
                                        \cf5 case\cf0  \cf7 3\cf0 : n3++;\
                                            \
                                            \cf5 break\cf0 ;\
                                            \
                                        \cf5 case\cf0  \cf7 4\cf0 : n4++;\
                                            \
                                            \cf5 break\cf0 ;\
                                            \
                                        \cf5 case\cf0  \cf7 5\cf0 : n5++;\
                                            \
                                            \cf5 break\cf0 ;\
                                            \
                                        \cf5 case\cf0  \cf7 6\cf0 : n6++;\
                                            \
                                            \cf5 break\cf0 ;\
                                            \
                                        \cf5 default\cf0 :\
                                            \
                                            \cf5 break\cf0 ;\
                                            \
                                    \}\
                                \}\
                                \
                                \
                                \cf5 if\cf0  ((n1+n2+n3+n4+n5+n6)!=\cf7 7\cf0 )\{ \cf6 cout\cf0  << \cf4 "erreur, recommencer programme"\cf0  << \cf8 endl\cf0 ;\
                                    \cf6 cout\cf0  << n1 << n2 << n3 << n4 << n5 << n6 << \cf8 endl\cf0 ;\}\
                                \
                                \cf5 if\cf0  ((n1>=\cf7 1\cf0 )&&(n2>=\cf7 1\cf0 )&&(n3>=\cf7 1\cf0 )&&(n4>=\cf7 1\cf0 )&&(n5>=\cf7 1\cf0 )&&(n6>=\cf7 1\cf0 )) \{ ptsopt=\cf7 1500\cf0 ; n1--; n2--; n3--; n4--; n5--; n6--; ptopt.\cf8 push_back\cf0 (ptsopt); desopt.\cf8 push_back\cf0 (\cf7 6\cf0 ); optch.\cf8 push_back\cf0 (\cf4 "123456"\cf0 );\}\
                                \
                                \cf2 //cout << n1 << n2 << n3 << n4 << n5 << n6 << endl << endl; //temp\cf0 \
                                \
                                \cf5 switch\cf0 (n6) \{\
                                        \
                                    \cf5 case\cf0  \cf7 3\cf0 :\
                                        \
                                        ptsopt=\cf7 600\cf0 ; desopt.\cf8 push_back\cf0 (n6); ptopt.\cf8 push_back\cf0 (ptsopt); optch.\cf8 push_back\cf0 (\cf4 "666"\cf0 );\
                                        \
                                        \cf5 break\cf0 ;\
                                        \
                                    \cf5 case\cf0  \cf7 4\cf0 :\
                                        \
                                        ptsopt=\cf7 1200\cf0 ; desopt.\cf8 push_back\cf0 (n6); ptopt.\cf8 push_back\cf0 (ptsopt); optch.\cf8 push_back\cf0 (\cf4 "6666"\cf0 );\
                                        \
                                        \cf5 break\cf0 ;\
                                        \
                                    \cf5 case\cf0  \cf7 5\cf0 :\
                                        \
                                        ptsopt=\cf7 2400\cf0 ; desopt.\cf8 push_back\cf0 (n6); ptopt.\cf8 push_back\cf0 (ptsopt); optch.\cf8 push_back\cf0 (\cf4 "66666"\cf0 );\
                                        \
                                        \cf5 break\cf0 ;\
                                        \
                                    \cf5 case\cf0  \cf7 6\cf0 :\
                                        \
                                        ptsopt=\cf7 4800\cf0 ; desopt.\cf8 push_back\cf0 (n6); ptopt.\cf8 push_back\cf0 (ptsopt); optch.\cf8 push_back\cf0 (\cf4 "666666"\cf0 );\
                                        \
                                        \cf5 break\cf0 ;\
                                        \
                                    \cf5 case\cf0  \cf7 7\cf0 :\
                                        \
                                        ptsopt=\cf7 9600\cf0 ; desopt.\cf8 push_back\cf0 (n6); ptopt.\cf8 push_back\cf0 (ptsopt); optch.\cf8 push_back\cf0 (\cf4 "6666666"\cf0 );\
                                        \
                                        \cf5 break\cf0 ;\
                                        \
                                    \cf5 default\cf0 :\
                                        \
                                        \cf5 break\cf0 ;\
                                        \
                                \}\
                                \
                                \
                                \
                                n6 = \cf7 0\cf0 ;\
                                \
                                \
                                \
                                \cf5 switch\cf0 (n5) \{\
                                        \
                                    \cf5 case\cf0  \cf7 1\cf0 :\
                                        \
                                        ptsopt=\cf7 50\cf0 ; desopt.\cf8 push_back\cf0 (n5); ptopt.\cf8 push_back\cf0 (ptsopt); optch.\cf8 push_back\cf0 (\cf4 "5"\cf0 );\
                                        \
                                        \cf5 break\cf0 ;\
                                        \
                                    \cf5 case\cf0  \cf7 2\cf0 :\
                                        \
                                        ptsopt=\cf7 50\cf0 ; desopt.\cf8 push_back\cf0 (\cf7 1\cf0 ); ptopt.\cf8 push_back\cf0 (ptsopt); optch.\cf8 push_back\cf0 (\cf4 "5"\cf0 );\
                                        \
                                        ptsopt=\cf7 50\cf0 ; desopt.\cf8 push_back\cf0 (\cf7 1\cf0 ); ptopt.\cf8 push_back\cf0 (ptsopt); optch.\cf8 push_back\cf0 (\cf4 "5"\cf0 );\
                                        \
                                        \cf5 break\cf0 ;\
                                        \
                                    \cf5 case\cf0  \cf7 3\cf0 :\
                                        \
                                        ptsopt=\cf7 500\cf0 ; desopt.\cf8 push_back\cf0 (n5); ptopt.\cf8 push_back\cf0 (ptsopt); optch.\cf8 push_back\cf0 (\cf4 "555"\cf0 );\
                                        \
                                        \cf5 break\cf0 ;\
                                        \
                                    \cf5 case\cf0  \cf7 4\cf0 :\
                                        \
                                        ptsopt=\cf7 1000\cf0 ; desopt.\cf8 push_back\cf0 (n5); ptopt.\cf8 push_back\cf0 (ptsopt); optch.\cf8 push_back\cf0 (\cf4 "5555"\cf0 );\
                                        \
                                        \cf5 break\cf0 ;\
                                        \
                                    \cf5 case\cf0  \cf7 5\cf0 :\
                                        \
                                        ptsopt=\cf7 2000\cf0 ; desopt.\cf8 push_back\cf0 (n5); ptopt.\cf8 push_back\cf0 (ptsopt); optch.\cf8 push_back\cf0 (\cf4 "55555"\cf0 );\
                                        \
                                        \cf5 break\cf0 ;\
                                        \
                                    \cf5 case\cf0  \cf7 6\cf0 :\
                                        \
                                        ptsopt=\cf7 4000\cf0 ; desopt.\cf8 push_back\cf0 (n5); ptopt.\cf8 push_back\cf0 (ptsopt); optch.\cf8 push_back\cf0 (\cf4 "555555"\cf0 );\
                                        \
                                        \cf5 break\cf0 ;\
                                        \
                                    \cf5 case\cf0  \cf7 7\cf0 :\
                                        \
                                        ptsopt=\cf7 8000\cf0 ; desopt.\cf8 push_back\cf0 (n5); ptopt.\cf8 push_back\cf0 (ptsopt); optch.\cf8 push_back\cf0 (\cf4 "5555555"\cf0 );\
                                        \
                                        \cf5 break\cf0 ;\
                                        \
                                    \cf5 default\cf0 :\
                                        \
                                        \cf5 break\cf0 ;\
                                        \
                                \}\
                                \
                                n5 = \cf7 0\cf0 ;\
                                \
                                \
                                \
                                \cf5 switch\cf0 (n4) \{\
                                        \
                                    \cf5 case\cf0  \cf7 3\cf0 :\
                                        \
                                        ptsopt=\cf7 400\cf0 ; desopt.\cf8 push_back\cf0 (n4); ptopt.\cf8 push_back\cf0 (ptsopt); optch.\cf8 push_back\cf0 (\cf4 "444"\cf0 );\
                                        \
                                        \cf5 break\cf0 ;\
                                        \
                                    \cf5 case\cf0  \cf7 4\cf0 :\
                                        \
                                        ptsopt=\cf7 800\cf0 ; desopt.\cf8 push_back\cf0 (n4); ptopt.\cf8 push_back\cf0 (ptsopt); optch.\cf8 push_back\cf0 (\cf4 "4444"\cf0 );\
                                        \
                                        \cf5 break\cf0 ;\
                                        \
                                    \cf5 case\cf0  \cf7 5\cf0 :\
                                        \
                                        ptsopt=\cf7 1600\cf0 ; desopt.\cf8 push_back\cf0 (n4); ptopt.\cf8 push_back\cf0 (ptsopt); optch.\cf8 push_back\cf0 (\cf4 "44444"\cf0 );\
                                        \
                                        \cf5 break\cf0 ;\
                                        \
                                    \cf5 case\cf0  \cf7 6\cf0 :\
                                        \
                                        ptsopt=\cf7 3200\cf0 ; desopt.\cf8 push_back\cf0 (n4); ptopt.\cf8 push_back\cf0 (ptsopt); optch.\cf8 push_back\cf0 (\cf4 "444444"\cf0 );\
                                        \
                                        \cf5 break\cf0 ;\
                                        \
                                    \cf5 case\cf0  \cf7 7\cf0 :\
                                        \
                                        ptsopt=\cf7 6400\cf0 ; desopt.\cf8 push_back\cf0 (n4); ptopt.\cf8 push_back\cf0 (ptsopt); optch.\cf8 push_back\cf0 (\cf4 "4444444"\cf0 );\
                                        \
                                        \cf5 break\cf0 ;\
                                        \
                                    \cf5 default\cf0 :\
                                        \
                                        \cf5 break\cf0 ;\
                                        \
                                        \
                                        \
                                \}\
                                \
                                \
                                \
                                n4 = \cf7 0\cf0 ;\
                                \
                                \
                                \
                                \cf5 switch\cf0 (n3) \{\
                                        \
                                    \cf5 case\cf0  \cf7 3\cf0 :\
                                        \
                                        ptsopt=\cf7 300\cf0 ; desopt.\cf8 push_back\cf0 (n3); ptopt.\cf8 push_back\cf0 (ptsopt); optch.\cf8 push_back\cf0 (\cf4 "333"\cf0 );\
                                        \
                                        \cf5 break\cf0 ;\
                                        \
                                    \cf5 case\cf0  \cf7 4\cf0 :\
                                        \
                                        ptsopt=\cf7 600\cf0 ; desopt.\cf8 push_back\cf0 (n3); ptopt.\cf8 push_back\cf0 (ptsopt); optch.\cf8 push_back\cf0 (\cf4 "3333"\cf0 );\
                                        \
                                        \cf5 break\cf0 ;\
                                        \
                                    \cf5 case\cf0  \cf7 5\cf0 :\
                                        \
                                        ptsopt=\cf7 1200\cf0 ; desopt.\cf8 push_back\cf0 (n3); ptopt.\cf8 push_back\cf0 (ptsopt); optch.\cf8 push_back\cf0 (\cf4 "33333"\cf0 );\
                                        \
                                        \cf5 break\cf0 ;\
                                        \
                                    \cf5 case\cf0  \cf7 6\cf0 :\
                                        \
                                        ptsopt=\cf7 2400\cf0 ; desopt.\cf8 push_back\cf0 (n3); ptopt.\cf8 push_back\cf0 (ptsopt); optch.\cf8 push_back\cf0 (\cf4 "333333"\cf0 );\
                                        \
                                        \cf5 break\cf0 ;\
                                        \
                                    \cf5 case\cf0  \cf7 7\cf0 :\
                                        \
                                        ptsopt=\cf7 4800\cf0 ; desopt.\cf8 push_back\cf0 (n3); ptopt.\cf8 push_back\cf0 (ptsopt); optch.\cf8 push_back\cf0 (\cf4 "3333333"\cf0 );\
                                        \
                                        \cf5 break\cf0 ;\
                                        \
                                    \cf5 default\cf0 :\
                                        \
                                        \cf5 break\cf0 ;\
                                        \
                                \}\
                                \
                                \
                                \
                                n3 = \cf7 0\cf0 ;\
                                \
                                \
                                \
                                \cf5 switch\cf0 (n2) \{\
                                        \
                                    \cf5 case\cf0  \cf7 3\cf0 :\
                                        \
                                        ptsopt=\cf7 200\cf0 ; desopt.\cf8 push_back\cf0 (n2); ptopt.\cf8 push_back\cf0 (ptsopt); optch.\cf8 push_back\cf0 (\cf4 "222"\cf0 );\
                                        \
                                        \cf5 break\cf0 ;\
                                        \
                                    \cf5 case\cf0  \cf7 4\cf0 :\
                                        \
                                        ptsopt=\cf7 400\cf0 ; desopt.\cf8 push_back\cf0 (n2); ptopt.\cf8 push_back\cf0 (ptsopt); optch.\cf8 push_back\cf0 (\cf4 "2222"\cf0 );\
                                        \
                                        \cf5 break\cf0 ;\
                                        \
                                    \cf5 case\cf0  \cf7 5\cf0 :\
                                        \
                                        ptsopt=\cf7 800\cf0 ; desopt.\cf8 push_back\cf0 (n2); ptopt.\cf8 push_back\cf0 (ptsopt); optch.\cf8 push_back\cf0 (\cf4 "22222"\cf0 );\
                                        \
                                        \cf5 break\cf0 ;\
                                        \
                                    \cf5 case\cf0  \cf7 6\cf0 :\
                                        \
                                        ptsopt=\cf7 1600\cf0 ; desopt.\cf8 push_back\cf0 (n2); ptopt.\cf8 push_back\cf0 (ptsopt); optch.\cf8 push_back\cf0 (\cf4 "222222"\cf0 );\
                                        \
                                        \cf5 break\cf0 ;\
                                        \
                                    \cf5 case\cf0  \cf7 7\cf0 :\
                                        \
                                        ptsopt=\cf7 3200\cf0 ; desopt.\cf8 push_back\cf0 (n2); ptopt.\cf8 push_back\cf0 (ptsopt); optch.\cf8 push_back\cf0 (\cf4 "2222222"\cf0 );\
                                        \
                                        \cf5 break\cf0 ;\
                                        \
                                    \cf5 default\cf0 :\
                                        \
                                        \cf5 break\cf0 ;\
                                        \
                                \}\
                                \
                                \
                                \
                                n2 = \cf7 0\cf0 ;\
                                \
                                \
                                \
                                \cf5 switch\cf0 (n1) \{\
                                        \
                                    \cf5 case\cf0  \cf7 1\cf0 :\
                                        \
                                        ptsopt=\cf7 100\cf0 ; desopt.\cf8 push_back\cf0 (n1); ptopt.\cf8 push_back\cf0 (ptsopt); optch.\cf8 push_back\cf0 (\cf4 "1"\cf0 );\
                                        \
                                        \cf5 break\cf0 ;\
                                        \
                                    \cf5 case\cf0  \cf7 2\cf0 :\
                                        \
                                        ptsopt=\cf7 100\cf0 ; desopt.\cf8 push_back\cf0 (\cf7 1\cf0 ); ptopt.\cf8 push_back\cf0 (ptsopt); optch.\cf8 push_back\cf0 (\cf4 "1"\cf0 );\
                                        \
                                        ptsopt=\cf7 100\cf0 ; desopt.\cf8 push_back\cf0 (\cf7 1\cf0 ); ptopt.\cf8 push_back\cf0 (ptsopt); optch.\cf8 push_back\cf0 (\cf4 "1"\cf0 );\
                                        \
                                        \cf5 break\cf0 ;\
                                        \
                                    \cf5 case\cf0  \cf7 3\cf0 :\
                                        \
                                        ptsopt=\cf7 1000\cf0 ; desopt.\cf8 push_back\cf0 (n1); ptopt.\cf8 push_back\cf0 (ptsopt); optch.\cf8 push_back\cf0 (\cf4 "111"\cf0 );\
                                        \
                                        \cf5 break\cf0 ;\
                                        \
                                    \cf5 case\cf0  \cf7 4\cf0 :\
                                        \
                                        ptsopt=\cf7 2000\cf0 ; desopt.\cf8 push_back\cf0 (n1); ptopt.\cf8 push_back\cf0 (ptsopt); optch.\cf8 push_back\cf0 (\cf4 "1111"\cf0 );\
                                        \
                                        \cf5 break\cf0 ;\
                                        \
                                    \cf5 case\cf0  \cf7 5\cf0 :\
                                        \
                                        ptsopt=\cf7 4000\cf0 ; desopt.\cf8 push_back\cf0 (n1); ptopt.\cf8 push_back\cf0 (ptsopt); optch.\cf8 push_back\cf0 (\cf4 "11111"\cf0 );\
                                        \
                                        \cf5 break\cf0 ;\
                                        \
                                    \cf5 case\cf0  \cf7 6\cf0 :\
                                        \
                                        ptsopt=\cf7 8000\cf0 ; desopt.\cf8 push_back\cf0 (n1); ptopt.\cf8 push_back\cf0 (ptsopt); optch.\cf8 push_back\cf0 (\cf4 "111111"\cf0 );\
                                        \
                                        \cf5 break\cf0 ;\
                                        \
                                    \cf5 case\cf0  \cf7 7\cf0 :\
                                        \
                                        ptsopt=\cf7 16000\cf0 ; desopt.\cf8 push_back\cf0 (n1); ptopt.\cf8 push_back\cf0 (ptsopt); optch.\cf8 push_back\cf0 (\cf4 "1111111"\cf0 );\
                                        \
                                        \cf5 break\cf0 ;\
                                        \
                                    \cf5 default\cf0 :\
                                        \
                                        \cf5 break\cf0 ;\
                                        \
                                \}\
                                \
                                n1 = \cf7 0\cf0 ;\
                                \
                                \cf5 if\cf0  (desopt.\cf8 size\cf0 ()>\cf7 5\cf0 )\{ \cf6 cout\cf0  << \cf4 "erreur trop de possibilites"\cf0  << \cf8 endl\cf0 ;\
                                    \
                                    desopt.\cf8 erase\cf0 (desopt.\cf8 begin\cf0 ()+\cf7 5\cf0 , desopt.\cf8 end\cf0 ());\
                                    \
                                    ptopt.\cf8 erase\cf0 (ptopt.\cf8 begin\cf0 ()+\cf7 5\cf0 , ptopt.\cf8 end\cf0 ());\
                                    \
                                    optch.\cf8 erase\cf0 (optch.\cf8 begin\cf0 ()+\cf7 5\cf0 , optch.\cf8 end\cf0 ());\
                                    \
                                \}\
                                \
                                \cf5 if\cf0  (desopt.\cf8 size\cf0 () != ptopt.\cf8 size\cf0 ()) \{ \cf6 cout\cf0  << \cf4 "erreur! vecteur des options pas egal a vecteur pts options"\cf0  << \cf8 endl\cf0 ;\}\
                                \
                                \cf5 if\cf0  ((ptopt.\cf8 size\cf0 ()!=desopt.\cf8 size\cf0 ())||(desopt.\cf8 size\cf0 ()!=optch.\cf8 size\cf0 ()))\{\cf6 cout\cf0  << \cf4 "erreur options!!"\cf0  << \cf8 endl\cf0 ;\}\
                                \
                                \cf5 if\cf0  ((desopt.\cf8 size\cf0 () == \cf7 0\cf0 ) && (ptopt.\cf8 size\cf0 () == \cf7 0\cf0 )) \{\
                                    cbp++;\
                                \}\
                                \cf5 else\cf0 \{   cbg++;\
                                    \
                                    \
                                    \cf5 switch\cf0 (desopt.\cf8 size\cf0 ())\{\
                                            \
                                        \cf5 case\cf0  \cf7 7\cf0 : \cf6 cout\cf0  << \cf4 "erreur de lancer de d\'e9s"\cf0  << \cf8 endl\cf0 ;\
                                            \
                                            \cf5 break\cf0 ;\
                                            \
                                        \cf5 case\cf0  \cf7 6\cf0 : \cf6 cout\cf0  << \cf4 "erreur de lancer de d\'e9s"\cf0  << \cf8 endl\cf0 ;\
                                            \
                                            \cf5 break\cf0 ;\
                                            \
                                        \cf5 case\cf0  \cf7 5\cf0 :\
                                            \
                                            \cf5 for\cf0  (\cf5 int\cf0  l=\cf7 0\cf0 ; l < desopt.\cf8 size\cf0 (); l++)\{\
                                                \
                                                \cf5 for\cf0  (\cf5 int\cf0  h=\cf7 0\cf0 ; h < desopt.\cf8 size\cf0 (); h++)\{\
                                                    \
                                                    \cf5 for\cf0  (\cf5 int\cf0  k=\cf7 0\cf0 ; k < desopt.\cf8 size\cf0 (); k++)\{\
                                                        \
                                                        \cf5 for\cf0  (\cf5 int\cf0  j=\cf7 0\cf0 ; j < desopt.\cf8 size\cf0 (); j++)\{\
                                                            \
                                                            \cf5 for\cf0  (\cf5 int\cf0  i=\cf7 0\cf0 ; i < desopt.\cf8 size\cf0 (); i++)\{\
                                                                \
                                                                \cf5 if\cf0 ((l<h)&&(h<k)&&(k<j)&&(j<i))\{\
                                                                    \
                                                                    w4 = desopt[\cf8 i\cf0 ]+desopt[\cf8 j\cf0 ]+desopt[\cf8 k\cf0 ]+desopt[\cf8 h\cf0 ]+desopt[\cf8 l\cf0 ];\
                                                                    \
                                                                    w8 = ptopt[\cf8 i\cf0 ]+ptopt[\cf8 j\cf0 ]+ptopt[\cf8 k\cf0 ]+ptopt[\cf8 h\cf0 ]+ptopt[\cf8 l\cf0 ];\
                                                                    \
                                                                    w12 = optch[\cf8 i\cf0 ]+optch[\cf8 j\cf0 ]+optch[\cf8 k\cf0 ]+optch[\cf8 h\cf0 ]+optch[\cf8 l\cf0 ];\
                                                                    \
                                                                    sdesopt.\cf8 push_back\cf0 (w4);\
                                                                    \
                                                                    sptopt.\cf8 push_back\cf0 (w8);\
                                                                    \
                                                                    soptch.\cf8 push_back\cf0 (w12);\
                                                                    \
                                                                \}\
                                                                \
                                                            \}\
                                                            \
                                                        \}\
                                                        \
                                                    \}\
                                                    \
                                                \}\
                                                \
                                            \}\
                                            \
                                        \cf5 case\cf0  \cf7 4\cf0 :\
                                            \
                                            \cf5 for\cf0  (\cf5 int\cf0  h=\cf7 0\cf0 ; h < desopt.\cf8 size\cf0 (); h++)\{\
                                                \
                                                \cf5 for\cf0  (\cf5 int\cf0  k=\cf7 0\cf0 ; k < desopt.\cf8 size\cf0 (); k++)\{\
                                                    \
                                                    \cf5 for\cf0  (\cf5 int\cf0  j=\cf7 0\cf0 ; j < desopt.\cf8 size\cf0 (); j++)\{\
                                                        \
                                                        \cf5 for\cf0  (\cf5 int\cf0  i=\cf7 0\cf0 ; i < desopt.\cf8 size\cf0 (); i++)\{\
                                                            \
                                                            \cf5 if\cf0  ((h<k)&&(k<j)&&(j<i))\{\
                                                                \
                                                                w3 = desopt[\cf8 i\cf0 ]+desopt[\cf8 j\cf0 ]+desopt[\cf8 k\cf0 ]+desopt[\cf8 h\cf0 ];\
                                                                \
                                                                w7 = ptopt[\cf8 i\cf0 ]+ptopt[\cf8 j\cf0 ]+ptopt[\cf8 k\cf0 ]+ptopt[\cf8 h\cf0 ];\
                                                                \
                                                                w11 = optch[\cf8 i\cf0 ]+optch[\cf8 j\cf0 ]+optch[\cf8 k\cf0 ]+optch[\cf8 h\cf0 ];\
                                                                \
                                                                sdesopt.\cf8 push_back\cf0 (w3);\
                                                                \
                                                                sptopt.\cf8 push_back\cf0 (w7);\
                                                                \
                                                                soptch.\cf8 push_back\cf0 (w11);\
                                                                \
                                                            \}\
                                                            \
                                                        \}\
                                                        \
                                                    \}\
                                                    \
                                                \}\
                                                \
                                            \}\
                                            \
                                        \cf5 case\cf0  \cf7 3\cf0 :\
                                            \
                                            \cf5 for\cf0  (\cf5 int\cf0  k=\cf7 0\cf0 ; k < desopt.\cf8 size\cf0 (); k++)\{\
                                                \
                                                \cf5 for\cf0  (\cf5 int\cf0  j=\cf7 0\cf0 ; j < desopt.\cf8 size\cf0 (); j++)\{\
                                                    \
                                                    \cf5 for\cf0  (\cf5 int\cf0  i=\cf7 0\cf0 ; i < desopt.\cf8 size\cf0 (); i++)\{\
                                                        \
                                                        \cf5 if\cf0  ((k<j)&&(j<i))\{\
                                                            \
                                                            w2  = desopt[\cf8 i\cf0 ]+desopt[\cf8 j\cf0 ]+desopt[\cf8 k\cf0 ];\
                                                            \
                                                            w6 = ptopt[\cf8 i\cf0 ]+ptopt[\cf8 j\cf0 ]+ptopt[\cf8 k\cf0 ];\
                                                            \
                                                            w10 = optch[\cf8 i\cf0 ]+optch[\cf8 j\cf0 ]+optch[\cf8 k\cf0 ];\
                                                            \
                                                            sdesopt.\cf8 push_back\cf0 (w2);\
                                                            \
                                                            sptopt.\cf8 push_back\cf0 (w6);\
                                                            \
                                                            soptch.\cf8 push_back\cf0 (w10);\
                                                            \
                                                        \}\
                                                        \
                                                    \}\
                                                    \
                                                \}\
                                                \
                                            \}\
                                            \
                                        \cf5 case\cf0  \cf7 2\cf0 :\
                                            \
                                            \cf5 for\cf0  (\cf5 int\cf0  j=\cf7 0\cf0 ; j < desopt.\cf8 size\cf0 (); j++)\{\
                                                \
                                                \cf5 for\cf0  (\cf5 int\cf0  i=\cf7 0\cf0 ; i < desopt.\cf8 size\cf0 (); i++)\{\
                                                    \
                                                    \cf5 if\cf0  (j<i)\{\
                                                        \
                                                        w1 = desopt[\cf8 i\cf0 ]+desopt[\cf8 j\cf0 ];\
                                                        \
                                                        w5 = ptopt[\cf8 i\cf0 ]+ptopt[\cf8 j\cf0 ];\
                                                        \
                                                        w9 = optch[\cf8 i\cf0 ]+optch[\cf8 j\cf0 ];\
                                                        \
                                                        sdesopt.\cf8 push_back\cf0 (w1);\
                                                        \
                                                        sptopt.\cf8 push_back\cf0 (w5);\
                                                        \
                                                        soptch.\cf8 push_back\cf0 (w9);\
                                                        \
                                                    \}\
                                                    \
                                                \}\
                                                \
                                            \}\
                                            \
                                        \cf5 case\cf0  \cf7 1\cf0 :\
                                            \
                                            \cf5 for\cf0  (\cf5 int\cf0  i=\cf7 0\cf0 ; i < desopt.\cf8 size\cf0 (); i++)\{\
                                                \
                                                sdesopt.\cf8 push_back\cf0 (desopt[\cf8 i\cf0 ]);\
                                                \
                                                sptopt.\cf8 push_back\cf0 (ptopt[\cf8 i\cf0 ]);\
                                                \
                                                soptch.\cf8 push_back\cf0 (optch[\cf8 i\cf0 ]);\
                                                \
                                            \}\
                                            \
                                            \cf5 break\cf0 ;\
                                            \
                                    \}\
                                    \
                                    \
                                    \
                                    \cf5 if\cf0  (sdesopt.\cf8 size\cf0 ()!=sptopt.\cf8 size\cf0 ())\{\cf6 cout\cf0  << \cf4 "erreur options!"\cf0  << \cf8 endl\cf0 ;\}\
                                    \
                                    \cf5 for\cf0 (\cf5 int\cf0  k=\cf7 0\cf0 ; k < sdesopt.\cf8 size\cf0 (); k++)\{\
                                        \
                                        \cf5 for\cf0  (\cf5 int\cf0  j=\cf7 0\cf0 ; j < sptopt.\cf8 size\cf0 (); j++)\{\
                                            \
                                            \cf5 if\cf0  ((sdesopt[\cf8 j\cf0 ]==sdesopt[\cf8 k\cf0 ])&&(j!=k))\{\
                                                \
                                                \cf5 if\cf0  (sptopt[\cf8 j\cf0 ] < sptopt[\cf8 k\cf0 ]) \{\
                                                    \
                                                    sptopt.\cf8 erase\cf0 (sptopt.\cf8 begin\cf0 ()+j);\
                                                    \
                                                    sdesopt.\cf8 erase\cf0 (sdesopt.\cf8 begin\cf0 ()+j);\
                                                    \
                                                    soptch.\cf8 erase\cf0 (soptch.\cf8 begin\cf0 ()+j);\
                                                    \
                                                \}\
                                                \
                                                \cf5 if\cf0  (sptopt[\cf8 j\cf0 ] > sptopt[\cf8 k\cf0 ]) \{\
                                                    \
                                                    sdesopt.\cf8 erase\cf0 (sdesopt.\cf8 begin\cf0 ()+k);\
                                                    \
                                                    sptopt.\cf8 erase\cf0 (sptopt.\cf8 begin\cf0 ()+k);\
                                                    \
                                                    soptch.\cf8 erase\cf0 (soptch.\cf8 begin\cf0 ()+k);\
                                                    \
                                                \}\
                                                \
                                                \cf5 if\cf0  (sptopt[\cf8 k\cf0 ]==sptopt[\cf8 j\cf0 ])\{\
                                                    \
                                                    sptopt.\cf8 erase\cf0 (sptopt.\cf8 begin\cf0 ()+k);\
                                                    \
                                                    sdesopt.\cf8 erase\cf0 (sdesopt.\cf8 begin\cf0 ()+k);\
                                                    \
                                                    soptch.\cf8 erase\cf0 (soptch.\cf8 begin\cf0 ()+k);\
                                                    \
                                                \}\
                                                \
                                            \}\
                                            \
                                        \}\
                                    \}\
                                    \
                                    \cf6 cout\cf0  << i1 << i2 << i3 << i4 << i5 << i6 << i7 << \cf8 endl\cf0 ;\
                                    \cf5 for\cf0  (\cf5 int\cf0  i=\cf7 0\cf0 ; i<soptch.\cf8 size\cf0 (); i++)\{\cf6 cout\cf0  << soptch[\cf8 i\cf0 ] << \cf4 " "\cf0  << sptopt[\cf8 i\cf0 ] << \cf4 " "\cf0  << sdesopt[\cf8 i\cf0 ] << \cf8 endl\cf0 ;\} \cf2 //temp\cf0 \
                                    \cf6 cout\cf0  << \cf8 endl\cf0 ;\
                                    \
                                \} \cf2 // fin else\cf0 \
                                des.\cf8 clear\cf0 ();ptopt.\cf8 clear\cf0 ();desopt.\cf8 clear\cf0 ();optch.\cf8 clear\cf0 (); sptopt.\cf8 clear\cf0 ();sdesopt.\cf8 clear\cf0 ();soptch.\cf8 clear\cf0 ();\
                                \
                                \
                            \} \cf2 //fermeture 1er for(i1)\cf0 \
                        \}\
                    \}\
                \}\
            \}\
        \}\
    \} \cf2 //fermeture dernier for(i7)\cf0 \
\} \cf2 // end main\cf0 \
}